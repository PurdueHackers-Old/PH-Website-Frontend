{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/Users/ashwin/Projects/PH-Website-Frontend/pages/_app.tsx\";\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport App, { Container } from 'next/app';\nimport Router from 'next/router';\nimport Head from 'next/head';\nimport withRedux from 'next-redux-wrapper';\nimport { library } from '@fortawesome/fontawesome';\nimport { faFacebook, faGithub, faTwitter } from '@fortawesome/fontawesome-free-brands';\nimport { faEnvelope, faCalendar, faCoffee, faHeart } from '@fortawesome/fontawesome-free-solid';\nimport makeStore from '../src/redux/store';\nimport { clearFlashMessages, sendErrorMessage, sendSuccessMessage, refreshSession } from '../src/redux/actions';\nimport Layout from '../src/modules/common/Layout';\nimport { initGA, logPageView } from '../src/utils/analytics';\nimport * as flash from '../src/utils/flash';\nimport '../src/index.css';\nimport '@fortawesome/fontawesome-svg-core/styles.css';\nimport '@fortawesome/fontawesome/styles.css';\nimport 'sanitize.css/sanitize.css';\nlibrary.add(faFacebook, faGithub, faTwitter, faEnvelope, faCalendar, faCoffee, faHeart);\nlet MyApp = (_dec = withRedux(makeStore), _dec(_class = class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    if (ctx.req) {\n      await ctx.store.dispatch(refreshSession(ctx));\n\n      if (!ctx.res.headersSent) {\n        const messages = flash.get(ctx);\n        if (messages.red) ctx.store.dispatch(sendErrorMessage(messages.red, ctx));\n        if (messages.green) ctx.store.dispatch(sendSuccessMessage(messages.green, ctx));\n      }\n    }\n\n    return {\n      pageProps: Component.getInitialProps ? await Component.getInitialProps(ctx) : {}\n    };\n  }\n\n  componentWillMount() {\n    Router.events.on('routeChangeStart', () => {\n      const {\n        store\n      } = this.props;\n      const {\n        flashState\n      } = store.getState();\n      if (flashState.green || flashState.red) store.dispatch(clearFlashMessages());\n    });\n  }\n\n  componentDidMount() {\n    const {\n      store\n    } = this.props;\n    const {\n      sessionState\n    } = store.getState();\n    const uid = sessionState.user && sessionState.user._id;\n    initGA(uid);\n    logPageView();\n    Router.router.events.on('routeChangeComplete', logPageView);\n\n    window.onbeforeunload = () => {\n      const {\n        flashState\n      } = store.getState();\n      if (flashState.green || flashState.red) store.dispatch(clearFlashMessages());\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Purdue Hackers\")), React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })))));\n  }\n\n}) || _class);\nexport { MyApp as default };","map":{"version":3,"sources":["/Users/ashwin/Projects/PH-Website-Frontend/pages/_app.tsx"],"names":["React","Provider","App","Container","Router","Head","withRedux","library","faFacebook","faGithub","faTwitter","faEnvelope","faCalendar","faCoffee","faHeart","makeStore","clearFlashMessages","sendErrorMessage","sendSuccessMessage","refreshSession","Layout","initGA","logPageView","flash","add","MyApp","getInitialProps","Component","ctx","req","store","dispatch","res","headersSent","messages","get","red","green","pageProps","componentWillMount","events","on","props","flashState","getState","componentDidMount","sessionState","uid","user","_id","router","window","onbeforeunload","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Provider } from 'react-redux';\nimport App, { Container } from 'next/app';\nimport Router from 'next/router';\nimport Head from 'next/head';\nimport withRedux from 'next-redux-wrapper';\nimport { Store } from 'redux';\nimport { library } from '@fortawesome/fontawesome';\nimport { faFacebook, faGithub, faTwitter } from '@fortawesome/fontawesome-free-brands';\nimport { faEnvelope, faCalendar, faCoffee, faHeart } from '@fortawesome/fontawesome-free-solid';\nimport makeStore from '../src/redux/store';\nimport {\n\tclearFlashMessages,\n\tsendErrorMessage,\n\tsendSuccessMessage,\n\trefreshSession\n} from '../src/redux/actions';\nimport Layout from '../src/modules/common/Layout';\nimport { initGA, logPageView } from '../src/utils/analytics';\nimport * as flash from '../src/utils/flash';\nimport { StoreState } from '../src/@types';\nimport '../src/index.css';\nimport '@fortawesome/fontawesome-svg-core/styles.css';\nimport '@fortawesome/fontawesome/styles.css';\nimport 'sanitize.css/sanitize.css';\n\nlibrary.add(faFacebook, faGithub, faTwitter, faEnvelope, faCalendar, faCoffee, faHeart);\n\ninterface Props {\n\tstore: Store<StoreState>;\n}\n\n@((withRedux as any)(makeStore))\nexport default class MyApp extends App<Props> {\n\tstatic async getInitialProps({ Component, ctx }) {\n\t\tif (ctx.req) {\n\t\t\tawait ctx.store.dispatch(refreshSession(ctx));\n\t\t\tif (!ctx.res.headersSent) {\n\t\t\t\tconst messages = flash.get(ctx);\n\t\t\t\tif (messages.red) ctx.store.dispatch(sendErrorMessage(messages.red, ctx));\n\t\t\t\tif (messages.green) ctx.store.dispatch(sendSuccessMessage(messages.green, ctx));\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tpageProps: Component.getInitialProps ? await Component.getInitialProps(ctx) : {}\n\t\t};\n\t}\n\n\tcomponentWillMount() {\n\t\tRouter.events.on('routeChangeStart', () => {\n\t\t\tconst { store } = this.props;\n\t\t\tconst { flashState } = store.getState();\n\t\t\tif (flashState.green || flashState.red) store.dispatch(clearFlashMessages() as any);\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { store } = this.props;\n\t\tconst { sessionState } = store.getState();\n\t\tconst uid = sessionState.user && sessionState.user._id;\n\t\tinitGA(uid);\n\t\tlogPageView();\n\t\tRouter.router.events.on('routeChangeComplete', logPageView);\n\t\twindow.onbeforeunload = () => {\n\t\t\tconst { flashState } = store.getState();\n\t\t\tif (flashState.green || flashState.red) store.dispatch(clearFlashMessages() as any);\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { Component, pageProps, store } = this.props as any;\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Head>\n\t\t\t\t\t<title>Purdue Hackers</title>\n\t\t\t\t</Head>\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<Layout>\n\t\t\t\t\t\t<Component {...pageProps} />\n\t\t\t\t\t</Layout>\n\t\t\t\t</Provider>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}