{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n// import cookie, { CookieAttributes } from 'js-cookie';\nimport cookies from 'nookies';\nimport Router from 'next/router';\nimport { sendErrorMessage } from '../redux/actions';\nexport const setCookie = (key, value, ctx, options) => {\n  return cookies.set(ctx, key, _JSON$stringify(value), options);\n};\nexport const removeCookie = (key, ctx) => {\n  return cookies.destroy(ctx, key);\n};\nexport const getCookie = (key, ctx) => {\n  let value = cookies.get(ctx)[key];\n  if (value) return JSON.parse(value);\n  return undefined;\n};\nexport const getToken = ctx => {\n  let token = getCookie('token', ctx);\n  return token;\n};\nexport const redirect = (target, ctx, replace) => {\n  if (ctx && ctx.res) {\n    // Server redirect\n    ctx.res.statusCode = replace ? 303 : 301;\n    ctx.res.setHeader('Location', target);\n  } else {\n    // Browser redirect\n    replace ? Router.replace(target) : Router.push(target);\n  }\n\n  return true;\n};\nexport const extractUser = ctx => {\n  // Try to get from redux, and if not, req.user\n  let user = ctx && ctx.store && ctx.store.getState().sessionState.user;\n  return user;\n};\nexport const hasPermission = (user, name) => user && _Object$keys(user).length !== 0 && user.constructor === Object && user.permissions.some(per => per.name === name || per.name === 'admin');\nexport const isAdmin = user => hasPermission(user, 'admin');\nexport const memberMatches = (user, id) => user && (hasPermission(user, 'admin') || user._id === id);\nexport const isAuthenticated = (ctx, permissions) => {\n  if (!permissions || !permissions.length) return !!getToken(ctx);\n  const user = extractUser(ctx);\n  if (!user) return false;\n  if (!permissions.length) return true;\n  if (!permissions.some(role => hasPermission(user, role.name))) return false;\n  return true;\n};\nexport const redirectIfNotAuthenticated = (path, ctx, {\n  permissions,\n  msg = 'Permission Denied'\n} = {}) => {\n  if (!isAuthenticated(ctx, permissions)) {\n    redirect(path, ctx, true);\n    sendErrorMessage(msg, ctx)(ctx.store.dispatch);\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/Users/ashwin/Projects/PH-Website-Frontend/src/utils/session.ts"],"names":["cookies","Router","sendErrorMessage","setCookie","key","value","ctx","options","set","removeCookie","destroy","getCookie","get","JSON","parse","undefined","getToken","token","redirect","target","replace","res","statusCode","setHeader","push","extractUser","user","store","getState","sessionState","hasPermission","name","length","constructor","Object","permissions","some","per","isAdmin","memberMatches","id","_id","isAuthenticated","role","redirectIfNotAuthenticated","path","msg","dispatch"],"mappings":";;AAAA;AACA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAcC,KAAd,EAAsCC,GAAtC,EAAqDC,OAArD,KAA0E;AAClG,SAAOP,OAAO,CAACQ,GAAR,CAAYF,GAAZ,EAAiBF,GAAjB,EAAsB,gBAAeC,KAAf,CAAtB,EAA6CE,OAA7C,CAAP;AACA,CAFM;AAIP,OAAO,MAAME,YAAY,GAAG,CAACL,GAAD,EAAcE,GAAd,KAAgC;AAC3D,SAAON,OAAO,CAACU,OAAR,CAAgBJ,GAAhB,EAAqBF,GAArB,CAAP;AACA,CAFM;AAIP,OAAO,MAAMO,SAAS,GAAG,CAACP,GAAD,EAAcE,GAAd,KAAgC;AACxD,MAAID,KAAK,GAAGL,OAAO,CAACY,GAAR,CAAYN,GAAZ,EAAiBF,GAAjB,CAAZ;AACA,MAAIC,KAAJ,EAAW,OAAOQ,IAAI,CAACC,KAAL,CAAWT,KAAX,CAAP;AACX,SAAOU,SAAP;AACA,CAJM;AAMP,OAAO,MAAMC,QAAQ,GAAIV,GAAD,IAAmB;AAC1C,MAAIW,KAAK,GAAGN,SAAS,CAAC,OAAD,EAAUL,GAAV,CAArB;AACA,SAAOW,KAAP;AACA,CAHM;AAKP,OAAO,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAAiBb,GAAjB,EAAgCc,OAAhC,KAAsD;AAC7E,MAAId,GAAG,IAAIA,GAAG,CAACe,GAAf,EAAoB;AACnB;AACAf,IAAAA,GAAG,CAACe,GAAJ,CAAQC,UAAR,GAAqBF,OAAO,GAAG,GAAH,GAAS,GAArC;AACAd,IAAAA,GAAG,CAACe,GAAJ,CAAQE,SAAR,CAAkB,UAAlB,EAA8BJ,MAA9B;AACA,GAJD,MAIO;AACN;AACAC,IAAAA,OAAO,GAAGnB,MAAM,CAACmB,OAAP,CAAeD,MAAf,CAAH,GAA4BlB,MAAM,CAACuB,IAAP,CAAYL,MAAZ,CAAnC;AACA;;AACD,SAAO,IAAP;AACA,CAVM;AAYP,OAAO,MAAMM,WAAW,GAAInB,GAAD,IAAkB;AAC5C;AACA,MAAIoB,IAAI,GAAGpB,GAAG,IAAIA,GAAG,CAACqB,KAAX,IAAoBrB,GAAG,CAACqB,KAAJ,CAAUC,QAAV,GAAqBC,YAArB,CAAkCH,IAAjE;AACA,SAAOA,IAAP;AACA,CAJM;AAMP,OAAO,MAAMI,aAAa,GAAG,CAACJ,IAAD,EAAeK,IAAf,KAC5BL,IAAI,IACH,aAAYA,IAAZ,EAAkBM,MAAlB,KAA6B,CAA7B,IAAkCN,IAAI,CAACO,WAAL,KAAqBC,MADxD,IAEAR,IAAI,CAACS,WAAL,CAAiBC,IAAjB,CAAsBC,GAAG,IAAIA,GAAG,CAACN,IAAJ,KAAaA,IAAb,IAAqBM,GAAG,CAACN,IAAJ,KAAa,OAA/D,CAHM;AAKP,OAAO,MAAMO,OAAO,GAAIZ,IAAD,IAAkBI,aAAa,CAACJ,IAAD,EAAO,OAAP,CAA/C;AAEP,OAAO,MAAMa,aAAa,GAAG,CAACb,IAAD,EAAec,EAAf,KAC5Bd,IAAI,KAAKI,aAAa,CAACJ,IAAD,EAAO,OAAP,CAAb,IAAgCA,IAAI,CAACe,GAAL,KAAaD,EAAlD,CADE;AAGP,OAAO,MAAME,eAAe,GAAG,CAACpC,GAAD,EAAe6B,WAAf,KAA8C;AAC5E,MAAI,CAACA,WAAD,IAAgB,CAACA,WAAW,CAACH,MAAjC,EAAyC,OAAO,CAAC,CAAChB,QAAQ,CAACV,GAAD,CAAjB;AACzC,QAAMoB,IAAI,GAAGD,WAAW,CAACnB,GAAD,CAAxB;AACA,MAAI,CAACoB,IAAL,EAAW,OAAO,KAAP;AACX,MAAI,CAACS,WAAW,CAACH,MAAjB,EAAyB,OAAO,IAAP;AACzB,MAAI,CAACG,WAAW,CAACC,IAAZ,CAAiBO,IAAI,IAAIb,aAAa,CAACJ,IAAD,EAAOiB,IAAI,CAACZ,IAAZ,CAAtC,CAAL,EAA+D,OAAO,KAAP;AAC/D,SAAO,IAAP;AACA,CAPM;AASP,OAAO,MAAMa,0BAA0B,GAAG,CACzCC,IADyC,EAEzCvC,GAFyC,EAGzC;AAAE6B,EAAAA,WAAF;AAAeW,EAAAA,GAAG,GAAG;AAArB,IAA2F,EAHlD,KAI5B;AACb,MAAI,CAACJ,eAAe,CAACpC,GAAD,EAAM6B,WAAN,CAApB,EAAwC;AACvCjB,IAAAA,QAAQ,CAAC2B,IAAD,EAAOvC,GAAP,EAAY,IAAZ,CAAR;AACAJ,IAAAA,gBAAgB,CAAC4C,GAAD,EAAMxC,GAAN,CAAhB,CAA2BA,GAAG,CAACqB,KAAJ,CAAUoB,QAArC;AACA,WAAO,IAAP;AACA;;AAED,SAAO,KAAP;AACA,CAZM","sourcesContent":["// import cookie, { CookieAttributes } from 'js-cookie';\nimport cookies from 'nookies';\nimport Router from 'next/router';\nimport { Member, Context, Permission } from '../@types';\nimport { sendErrorMessage } from '../redux/actions';\n\nexport const setCookie = (key: string, value: string | object, ctx?: Context, options?: object) => {\n\treturn cookies.set(ctx, key, JSON.stringify(value), options);\n};\n\nexport const removeCookie = (key: string, ctx?: Context) => {\n\treturn cookies.destroy(ctx, key);\n};\n\nexport const getCookie = (key: string, ctx?: Context) => {\n\tlet value = cookies.get(ctx)[key];\n\tif (value) return JSON.parse(value);\n\treturn undefined;\n};\n\nexport const getToken = (ctx?: Context) => {\n\tlet token = getCookie('token', ctx);\n\treturn token;\n};\n\nexport const redirect = (target: string, ctx?: Context, replace?: boolean) => {\n\tif (ctx && ctx.res) {\n\t\t// Server redirect\n\t\tctx.res.statusCode = replace ? 303 : 301;\n\t\tctx.res.setHeader('Location', target);\n\t} else {\n\t\t// Browser redirect\n\t\treplace ? Router.replace(target) : Router.push(target);\n\t}\n\treturn true;\n};\n\nexport const extractUser = (ctx: Context) => {\n\t// Try to get from redux, and if not, req.user\n\tlet user = ctx && ctx.store && ctx.store.getState().sessionState.user;\n\treturn user;\n};\n\nexport const hasPermission = (user: Member, name: string) =>\n\tuser &&\n\t(Object.keys(user).length !== 0 && user.constructor === Object) &&\n\tuser.permissions.some(per => per.name === name || per.name === 'admin');\n\nexport const isAdmin = (user: Member) => hasPermission(user, 'admin');\n\nexport const memberMatches = (user: Member, id: string) =>\n\tuser && (hasPermission(user, 'admin') || user._id === id);\n\nexport const isAuthenticated = (ctx: Context, permissions?: Permission[]) => {\n\tif (!permissions || !permissions.length) return !!getToken(ctx);\n\tconst user = extractUser(ctx);\n\tif (!user) return false;\n\tif (!permissions.length) return true;\n\tif (!permissions.some(role => hasPermission(user, role.name))) return false;\n\treturn true;\n};\n\nexport const redirectIfNotAuthenticated = (\n\tpath: string,\n\tctx: Context,\n\t{ permissions, msg = 'Permission Denied' }: { permissions?: Permission[]; msg?: string } = {}\n): boolean => {\n\tif (!isAuthenticated(ctx, permissions)) {\n\t\tredirect(path, ctx, true);\n\t\tsendErrorMessage(msg, ctx)(ctx.store.dispatch);\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n"]},"metadata":{},"sourceType":"module"}