{"ast":null,"code":"import axios from 'axios';\nimport getConfig from 'next/config';\nconst {\n  publicRuntimeConfig: CONFIG\n} = getConfig();\nexport const api = axios.create({\n  baseURL: CONFIG.API_URL\n});\nexport const err = e => !e ? 'Whoops, something went wrong!' : e.message && typeof e.message === 'string' ? e.message : e.error && typeof e.error === 'string' ? e.error : 'Whoops, something went wrong!';\n\nconst dateToString = date => new Date(date).toLocaleDateString('en-US', {\n  month: 'short',\n  day: 'numeric',\n  weekday: 'short',\n  hour: '2-digit',\n  minute: '2-digit',\n  timeZone: 'America/Indiana/Indianapolis'\n});\n\nexport const formatDate = date => {\n  if (!date) return 'N/A';\n  const str = dateToString(date);\n  return str !== 'Invalid Date' ? str : 'N/A';\n};\nexport const endResponse = ctx => ctx && ctx.res && ctx.res.end();\nexport const shortName = name => {\n  if (name.charAt(31) !== ' ' && name.charAt(32) !== ' ') {\n    for (let i = 31; i > 0; i--) {\n      if (name.charAt(i) === ' ') {\n        return \"\".concat(name.substring(0, i), \"...\");\n      }\n    }\n  }\n\n  return name.substring(0, 32);\n};","map":{"version":3,"sources":["/Users/ashwin/Projects/PH-Website-Frontend/src/utils/index.ts"],"names":["axios","getConfig","publicRuntimeConfig","CONFIG","api","create","baseURL","API_URL","err","e","message","error","dateToString","date","Date","toLocaleDateString","month","day","weekday","hour","minute","timeZone","formatDate","str","endResponse","ctx","res","end","shortName","name","charAt","i","substring"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,MAAM;AAAEC,EAAAA,mBAAmB,EAAEC;AAAvB,IAAkCF,SAAS,EAAjD;AAEA,OAAO,MAAMG,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAEH,MAAM,CAACI;AADe,CAAb,CAAZ;AAIP,OAAO,MAAMC,GAAG,GAAGC,CAAC,IACnB,CAACA,CAAD,GACG,+BADH,GAEGA,CAAC,CAACC,OAAF,IAAa,OAAOD,CAAC,CAACC,OAAT,KAAqB,QAAlC,GACAD,CAAC,CAACC,OADF,GAEAD,CAAC,CAACE,KAAF,IAAW,OAAOF,CAAC,CAACE,KAAT,KAAmB,QAA9B,GACAF,CAAC,CAACE,KADF,GAEA,+BAPG;;AASP,MAAMC,YAAY,GAAIC,IAAD,IACpB,IAAIC,IAAJ,CAASD,IAAT,EAAeE,kBAAf,CAAkC,OAAlC,EAA2C;AAC1CC,EAAAA,KAAK,EAAE,OADmC;AAE1CC,EAAAA,GAAG,EAAE,SAFqC;AAG1CC,EAAAA,OAAO,EAAE,OAHiC;AAI1CC,EAAAA,IAAI,EAAE,SAJoC;AAK1CC,EAAAA,MAAM,EAAE,SALkC;AAM1CC,EAAAA,QAAQ,EAAE;AANgC,CAA3C,CADD;;AAUA,OAAO,MAAMC,UAAU,GAAIT,IAAD,IAAkC;AAC3D,MAAI,CAACA,IAAL,EAAW,OAAO,KAAP;AACX,QAAMU,GAAG,GAAGX,YAAY,CAACC,IAAD,CAAxB;AACA,SAAOU,GAAG,KAAK,cAAR,GAAyBA,GAAzB,GAA+B,KAAtC;AACA,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAIC,GAAD,IAAkBA,GAAG,IAAIA,GAAG,CAACC,GAAX,IAAkBD,GAAG,CAACC,GAAJ,CAAQC,GAAR,EAAxD;AAEP,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAkB;AAC1C,MAAIA,IAAI,CAACC,MAAL,CAAY,EAAZ,MAAoB,GAApB,IAA2BD,IAAI,CAACC,MAAL,CAAY,EAAZ,MAAoB,GAAnD,EAAwD;AACvD,SAAK,IAAIC,CAAC,GAAG,EAAb,EAAiBA,CAAC,GAAG,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC5B,UAAIF,IAAI,CAACC,MAAL,CAAYC,CAAZ,MAAmB,GAAvB,EAA4B;AAC3B,yBAAUF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkBD,CAAlB,CAAV;AACA;AACD;AACD;;AACD,SAAOF,IAAI,CAACG,SAAL,CAAe,CAAf,EAAkB,EAAlB,CAAP;AACA,CATM","sourcesContent":["import axios from 'axios';\nimport getConfig from 'next/config';\nimport { Context } from '../@types';\n\nconst { publicRuntimeConfig: CONFIG } = getConfig();\n\nexport const api = axios.create({\n\tbaseURL: CONFIG.API_URL\n});\n\nexport const err = e =>\n\t!e\n\t\t? 'Whoops, something went wrong!'\n\t\t: e.message && typeof e.message === 'string'\n\t\t? e.message\n\t\t: e.error && typeof e.error === 'string'\n\t\t? e.error\n\t\t: 'Whoops, something went wrong!';\n\nconst dateToString = (date: string | number | Date) =>\n\tnew Date(date).toLocaleDateString('en-US', {\n\t\tmonth: 'short',\n\t\tday: 'numeric',\n\t\tweekday: 'short',\n\t\thour: '2-digit',\n\t\tminute: '2-digit',\n\t\ttimeZone: 'America/Indiana/Indianapolis'\n\t});\n\nexport const formatDate = (date: string | number | Date) => {\n\tif (!date) return 'N/A';\n\tconst str = dateToString(date);\n\treturn str !== 'Invalid Date' ? str : 'N/A';\n};\n\nexport const endResponse = (ctx: Context) => ctx && ctx.res && ctx.res.end();\n\nexport const shortName = (name: string) => {\n\tif (name.charAt(31) !== ' ' && name.charAt(32) !== ' ') {\n\t\tfor (let i = 31; i > 0; i--) {\n\t\t\tif (name.charAt(i) === ' ') {\n\t\t\t\treturn `${name.substring(0, i)}...`;\n\t\t\t}\n\t\t}\n\t}\n\treturn name.substring(0, 32);\n};\n"]},"metadata":{},"sourceType":"module"}