{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport getConfig from 'next/config';\nimport rootReducer from '../reducers';\nconst {\n  publicRuntimeConfig\n} = getConfig();\nconst middleware = [thunk];\nconst enhancer = publicRuntimeConfig.NODE_ENV !== 'production' ? composeWithDevTools(applyMiddleware(...middleware)) : compose(applyMiddleware(...middleware));\nexport default ((initialState, options) => {\n  return createStore(rootReducer, initialState, enhancer);\n});","map":{"version":3,"sources":["/Users/ashwin/Projects/PH-Website-Frontend/src/redux/store/server.ts"],"names":["createStore","compose","applyMiddleware","composeWithDevTools","thunk","getConfig","rootReducer","publicRuntimeConfig","middleware","enhancer","NODE_ENV","initialState","options"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA0BF,SAAS,EAAzC;AAEA,MAAMG,UAAiB,GAAG,CAACJ,KAAD,CAA1B;AAEA,MAAMK,QAAQ,GACbF,mBAAmB,CAACG,QAApB,KAAiC,YAAjC,GACGP,mBAAmB,CAACD,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CADtB,GAEGP,OAAO,CAACC,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAHX;AAKA,gBAAe,CAACG,YAAD,EAAeC,OAAf,KAA2B;AACzC,SAAOZ,WAAW,CAACM,WAAD,EAAcK,YAAd,EAA4BF,QAA5B,CAAlB;AACA,CAFD","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport getConfig from 'next/config';\nimport rootReducer from '../reducers';\nconst { publicRuntimeConfig } = getConfig();\n\nconst middleware: any[] = [thunk];\n\nconst enhancer =\n\tpublicRuntimeConfig.NODE_ENV !== 'production'\n\t\t? composeWithDevTools(applyMiddleware(...middleware))\n\t\t: compose(applyMiddleware(...middleware));\n\nexport default (initialState, options) => {\n\treturn createStore(rootReducer, initialState, enhancer);\n};\n"]},"metadata":{},"sourceType":"module"}